/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
  \file         integration.cc
  \date         January 2015
  \author       Nicu Tofan

*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include "integration.h"
#include "inprocess.h"
#include "inmanager.h"

#include <QCoreApplication>

/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

using namespace intest;

/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  DATA    ---------------------------------------------------------------- */

/*  DATA    ================================================================ */
//
//
//
//
/*  FUNCTIONS    ----------------------------------------------------------- */

/* ------------------------------------------------------------------------- */
Integration::Integration()
{
    Manager::add (this);
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
Integration::~Integration()
{
}
/* ========================================================================= */

/* ------------------------------------------------------------------------- */
Process * Integration::runMonitoredProcess (
        const QString & s_program_path,
        const QStringList & arg_list,
        const QStringList & input,
        const QString & s_working_path)
{
    intest::Process * retp = new intest::Process ();
    retp->setProgram (s_program_path);
    retp->setArguments (arg_list);
    if (!s_working_path.isEmpty ()) {
        retp->setWorkingDirectory (s_working_path);
    }

    // run the program
    retp->perform (input);

    return retp;
}
/* ========================================================================= */

/*  FUNCTIONS    =========================================================== */
//
//
//
//
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
